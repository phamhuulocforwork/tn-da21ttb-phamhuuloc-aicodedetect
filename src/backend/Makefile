PYTHON = python3.13
VENV = venv
VENV_BIN = $(VENV)/bin
PIP = $(VENV_BIN)/pip
PYTHON_VENV = $(VENV_BIN)/python

GREEN = \033[0;32m
BLUE = \033[0;34m
YELLOW = \033[1;33m
RED = \033[0;31m
NC = \033[0m

.PHONY: help
help:
	@echo "$(BLUE)AI Code Detection Backend - Available Commands:$(NC)"
	@echo "$(GREEN)  make setup$(NC)     - Táº¡o virtual environment vÃ  cÃ i Ä‘áº·t dependencies"
	@echo "$(GREEN)  make install$(NC)   - CÃ i Ä‘áº·t/update dependencies"
	@echo "$(GREEN)  make dev$(NC)       - Cháº¡y server development vá»›i hot reload"
	@echo "$(GREEN)  make start$(NC)     - Cháº¡y server production"
	@echo "$(GREEN)  make clean$(NC)     - XÃ³a virtual environment vÃ  cache"

setup:
	@echo "$(YELLOW)ðŸ“¦ Creating virtual environment...$(NC)"
	$(PYTHON) -m venv $(VENV)
	@echo "$(YELLOW)ðŸ“š Installing dependencies...$(NC)"
	$(PIP) install --upgrade pip setuptools wheel
	$(PIP) install -r requirements.txt --only-binary=:all:
	@echo "$(GREEN)âœ… Setup completed!$(NC)"

install:
	@echo "$(YELLOW)ðŸ“š Installing/updating dependencies...$(NC)"
	$(PIP) install --upgrade pip setuptools wheel
	$(PIP) install -r requirements.txt --only-binary=:all:
	@echo "$(GREEN)âœ… Dependencies installed!$(NC)"

dev:
	@echo "$(BLUE)ðŸš€ Starting development server...$(NC)"
	@echo "$(BLUE)ðŸ“± Server: http://localhost:8000$(NC)"
	@echo "$(BLUE)ðŸ“– API Docs: http://localhost:8000/docs$(NC)"
	@echo "$(YELLOW)ðŸ›‘ Press Ctrl+C to stop$(NC)"
	@echo ""
	$(VENV_BIN)/uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

start:
	@echo "$(BLUE)ðŸš€ Starting production server...$(NC)"
	$(VENV_BIN)/uvicorn app.main:app --host 0.0.0.0 --port 8000

clean:
	@echo "$(RED)ðŸ§¹ Cleaning up...$(NC)"
	rm -rf $(VENV)
	find . -type d -name "venv" -exec rm -rf {} +
	find . -type d -name "__pycache__" -delete
	find . -type f -name "*.pyc" -delete
	@echo "$(GREEN)âœ… Cleanup completed!$(NC)"

quick: dev 